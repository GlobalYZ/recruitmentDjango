企业级数据库设计是个原则：
3个基础原则，4个扩展性原则，3个完备性原则
3个基础原则:
①结构清晰：表名、字段命名没有歧义，能一眼看懂
②唯一职责：一表一用，领域定义清晰，不存储无关信息，相关数据在一张表中
③主键原则：设计不带物理意义的主键；有唯一约束，确保幂等
4个扩展性原则（影响系统的性能和容量）：
①长短分离：可以扩展，长文本独立存储；有合适的容量设计
②冷热分离：当前数据与历史数据分离
③索引完备：有合适索引方便查询
④不使用关联查询：不使用一切的SQL Join操作，不做2个表或者更多表的关联查询
    示例：查询商家每一个订单的金额. 下面违反了
    select s.shop_name,o.id as order_id,o.total_amount from shop s,order o where s.id = o.shop_id
3个完备性原则：
①完整性：保证数据的准确性和完整性，重要的内容都有记录
②可追溯：可追溯创建时间，修改时间，可以逻辑删除
③一致性原则：数据之间保持一致，尽可能避免同样的数据存储在不同表中

1---创建工程
django-admin startproject recruitment
python3 startproject recruitment
2---创建应用
python3 manage.py startapp jobs
3---创建账号
python3 manage.py createsuperuser
4---数据迁移
python3 manage.py makemigrations
python3 manage.py migrate
5---启动  后者方法是指定settings下面的local.py的配置启动
python3 manage.py runserver 0.0.0.0:8000 settings=settings.local
6---查看数据库存放位置
mysql>show global variables like "%datadir%";
7---读取CSV文件:前提是在类中已定义好
python3 manage.py import_candidates --path ~/Desktop/候选人列表.csv
8---安装 Django 的主题风格，注意要加到INSTALLED_APPS，和urlpatterns引入
pip3 install django-grappelli
INSTALLED_APPS = [
    'grappelli',]
urlpatterns = [
    path('grappelli/',include('grappelli.urls')),]
9---安装钉钉聊天机器人：
pip3 install DingtalkChatbot
测试群消息:
python3 manage.py shell --settings=settings.local
from interview import dingtalk
dingtalk.send("秋季招聘面试启动通知，自2020/09/01开始秋季招聘")
10---安装registration，允许候选人注册登录
pip3 install django-registration-redux
添加到apps中，同步数据库，添加登录，退出链接到页面中

